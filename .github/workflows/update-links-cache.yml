name: Update Links Cache

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */2 * * *"  # every 2 hours

permissions:
  contents: write

env:
  SHEET_GVIZ_URL: "https://docs.google.com/spreadsheets/d/100MLUiSxyYpUfBhBM9hnqNd8EVXc4A4d2vZCkMVGoE4/gviz/tq?tqx=out:json"
  SHEET_CSV_URL:  "https://docs.google.com/spreadsheets/d/100MLUiSxyYpUfBhBM9hnqNd8EVXc4A4d2vZCkMVGoE4/export?format=csv"

jobs:
  update-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Fetch GViz JSON
        id: gviz
        run: |
          curl -sS "$SHEET_GVIZ_URL" -o /tmp/sheet.json
          if grep -q "google.visualization.Query.setResponse" /tmp/sheet.json; then
            echo "ok=true" >> $GITHUB_OUTPUT
          else
            echo "ok=false" >> $GITHUB_OUTPUT
          fi

      - name: Parse GViz JSON
        if: steps.gviz.outputs.ok == 'true'
        run: |
          node <<'EOF'
          const fs = require('fs');
          const raw = fs.readFileSync('/tmp/sheet.json', 'utf8');
          const jsonText = raw.match(/setResponse\((.*)\);/s)[1];
          const data = JSON.parse(jsonText).table.rows
            .map(r => ({ label: r.c[0]?.v || '', url: r.c[1]?.v || '' }))
            .filter(r => r.label && r.url);
          fs.writeFileSync('links/links-cache.json', JSON.stringify(data, null, 2));
          EOF

      - name: Fallback fetch CSV
        if: steps.gviz.outputs.ok != 'true'
        run: |
          curl -sS "$SHEET_CSV_URL" -o /tmp/sheet.csv

      - name: Parse CSV to JSON
        if: steps.gviz.outputs.ok != 'true'
        run: |
          node <<'EOF'
          const fs = require('fs');
          const rows = fs.readFileSync('/tmp/sheet.csv', 'utf8')
            .split('\n').map(r => r.split(',').map(c => c.trim()));
          const data = rows.slice(1) // skip header
            .map(r => ({ label: r[0], url: r[1] }))
            .filter(r => r.label && r.url);
          fs.writeFileSync('links/links-cache.json', JSON.stringify(data, null, 2));
          EOF

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add links/links-cache.json
          git commit -m "Update links cache" || echo "No changes"
          git push
